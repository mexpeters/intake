/**
 * Message styler (usually a chalk function).
 */
export declare type MessageStyle = (x: string) => string;
/**
 * A chunk of text forming part of an overall log message.
 */
export declare type MessageChunk = [string, MessageStyle];
export interface LoggerOptions {
    /**
     * Optional prefix to prepend to all outgoing messages.
     */
    prefix?: MessageChunk | string;
    /**
     * Style to be applied to the log message itself. If ommitted the defualt
     * console style will be applied.
     */
    style?: MessageStyle;
    /**
     * The log writer that handles output of the rendered message. This can
     * mostly be ignored unless you'd like to redirect output to somewhere
     * other than the stadard gulp output.
     */
    writer?: (message: string) => void;
}
/**
 * Create a styled, prefixed logger.
 */
export declare const logger: (opts: LoggerOptions) => (message: string) => void;
/**
 * Emit an error message.
 */
export declare const error: (message: string) => void;
/**
 * Emit a warning message.
 */
export declare const warn: (message: string) => void;
/**
 * Emit an info message.
 */
export declare const info: (message: string) => void;
/**
 * Emit a debug message.
 */
export declare const debug: (message: string) => void;
